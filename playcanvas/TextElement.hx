package playcanvas;

@:jsRequire("playcanvas", "TextElement") extern class TextElement {
	function new(element:Dynamic);
	var _element : Dynamic;
	var _system : Dynamic;
	var _entity : Dynamic;
	var _text : String;
	var _symbols : Array<Dynamic>;
	var _colorPalette : Array<Dynamic>;
	var _outlinePalette : Array<Dynamic>;
	var _shadowPalette : Array<Dynamic>;
	var _symbolColors : Array<Dynamic>;
	var _symbolOutlineParams : Array<Dynamic>;
	var _symbolShadowParams : Array<Dynamic>;
	var _i18nKey : Dynamic;
	var _fontAsset : LocalizedAsset;
	var _font : Dynamic;
	var _color : Color;
	var _colorUniform : js.lib.Float32Array;
	var _spacing : Float;
	var _fontSize : Float;
	var _fontMinY : Float;
	var _fontMaxY : Float;
	var _originalFontSize : Float;
	var _maxFontSize : Float;
	var _minFontSize : Float;
	var _autoFitWidth : Bool;
	var _autoFitHeight : Bool;
	var _maxLines : Float;
	var _lineHeight : Float;
	var _scaledLineHeight : Float;
	var _wrapLines : Bool;
	var _drawOrder : Float;
	var _alignment : Vec2;
	var _autoWidth : Bool;
	var _autoHeight : Bool;
	var width : Float;
	var height : Float;
	var _node : GraphNode;
	var _model : Model;
	var _meshInfo : Array<Dynamic>;
	var _material : Dynamic;
	var _aabbDirty : Bool;
	var _aabb : BoundingBox;
	var _noResize : Bool;
	var _currentMaterialType : Dynamic;
	var _maskedMaterialSrc : Dynamic;
	var _rtlReorder : Bool;
	var _unicodeConverter : Bool;
	var _rtl : Bool;
	var _outlineColor : Color;
	var _outlineColorUniform : js.lib.Float32Array;
	var _outlineThicknessScale : Float;
	var _outlineThickness : Float;
	var _shadowColor : Color;
	var _shadowColorUniform : js.lib.Float32Array;
	var _shadowOffsetScale : Float;
	var _shadowOffset : Vec2;
	var _shadowOffsetUniform : js.lib.Float32Array;
	var _enableMarkup : Bool;
	var _rangeStart : Float;
	var _rangeEnd : Float;
	function destroy():Void;
	var font : Dynamic;
	function _onParentResize(width:Dynamic, height:Dynamic):Void;
	function _onScreenChange(screen:Dynamic):Void;
	function _onScreenSpaceChange(value:Dynamic):Void;
	function _onDrawOrderChange(order:Dynamic):Void;
	function _onPivotChange(pivot:Dynamic):Void;
	function _onLocaleSet(locale:Dynamic):Void;
	function _onLocalizationData(locale:Dynamic, messages:Dynamic):Void;
	function _resetLocalizedText():Void;
	function _setText(text:Dynamic):Void;
	function _updateText(text:Dynamic):Void;
	function _removeMeshInstance(meshInstance:Dynamic):Void;
	function _setMaterial(material:Dynamic):Void;
	function _updateMaterial(screenSpace:Dynamic):Void;
	function _updateMaterialEmissive():Void;
	function _updateMaterialOutline():Void;
	function _updateMaterialShadow():Void;
	function _isWordBoundary(char:Dynamic):Bool;
	function _isValidNextChar(nextchar:Dynamic):Bool;
	function _isNextCJKBoundary(char:Dynamic, nextchar:Dynamic):Bool;
	function _isNextCJKWholeWord(nextchar:Dynamic):Bool;
	function _updateMeshes():Void;
	var _lineWidths : Array<Dynamic>;
	var _lineContents : Array<Dynamic>;
	var autoWidth : Bool;
	var autoHeight : Bool;
	function _onFontRender():Void;
	function _onFontLoad(asset:Dynamic):Void;
	function _onFontChange(asset:Dynamic, name:Dynamic, _new:Dynamic, _old:Dynamic):Void;
	function _onFontRemove(asset:Dynamic):Void;
	function _setTextureParams(mi:Dynamic, texture:Dynamic):Void;
	function _getPxRange(font:Dynamic):Float;
	function _getUv(char:Dynamic):Dynamic;
	function onEnable():Void;
	function onDisable():Void;
	function _setStencil(stencilParams:Dynamic):Void;
	function _shouldAutoFitWidth():Bool;
	function _shouldAutoFitHeight():Bool;
	function _shouldAutoFit():Bool;
	function _calculateCharsPerTexture(symbolIndex:Dynamic):{ };
	function _updateRenderRange():Void;
	var text : String;
	var key : Dynamic;
	var color : Color;
	var opacity : Float;
	var lineHeight : Float;
	var wrapLines : Bool;
	final lines : Array<Dynamic>;
	var spacing : Float;
	var fontSize : Float;
	var fontAsset : Dynamic;
	var alignment : Vec2;
	var rtlReorder : Bool;
	var unicodeConverter : Bool;
	final aabb : BoundingBox;
	var outlineColor : Color;
	var outlineThickness : Float;
	var shadowColor : Color;
	var shadowOffset : Vec2;
	var minFontSize : Float;
	var maxFontSize : Float;
	var autoFitWidth : Bool;
	var autoFitHeight : Bool;
	var maxLines : Float;
	var enableMarkup : Bool;
	final symbols : Array<Dynamic>;
	final symbolColors : Array<Dynamic>;
	final symbolOutlineParams : Array<Dynamic>;
	final symbolShadowParams : Array<Dynamic>;
	final rtl : Bool;
	var rangeStart : Float;
	var rangeEnd : Float;
	static var prototype : TextElement;
}